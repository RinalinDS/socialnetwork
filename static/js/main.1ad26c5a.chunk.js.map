{"version":3,"sources":["components/Dialogs/Dialog.module.css","components/Navbar/Navbar.module.css","components/Dialogs/DialogItems/DialogItems.module.css","components/Profile/MyPost/MyPost.module.css","components/Dialogs/Message/Message.module.css","components/Header/Header.module.css","components/Navbar/Friends/Friends.module.css","components/Profile/MyPost/Post/Post.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","reportWebVitals.ts","redux/state.tsx","components/Header/Header.tsx","components/Navbar/Friends/Friends.tsx","components/Navbar/Navbar.tsx","components/Profile/MyPost/Post/Post.tsx","components/Profile/MyPost/MyPost.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/Profile.tsx","components/Dialogs/DialogItems/DialogItems.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/Dialogs.tsx","components/Settings/Settings.tsx","components/Music/Music.tsx","components/News/News.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rerenderEntireTree","state","console","log","profilePage","posts","id","message","likescount","newPostText","dialogsPage","dialogs","name","avatar","messages","myMessage","newMessageText","friends","addPost","newPost","push","updatePostMessage","text","addMessage","Math","random","updateMessageText","Header","className","s","header","src","alt","Friends","props","map","m","Navbar","isLinkActive","x","isActive","active_link","item","nav","to","Post","likecount","MyPost","postsElements","newElement","React","createRef","postsBlock","value","newTextMsg","ref","onChange","current","onClick","ProfileInfo","block","Profile","content","DialogItems","dialogactive","dialog","Message","left","right","Dialogs","messageElements","dialogsElements","newMessage","dialogsItems","textarea","Settings","Music","News","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.1ad26c5a.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__kBKsm\",\"dialogsItems\":\"Dialog_dialogsItems__2Nkq6\",\"dialog\":\"Dialog_dialog__3CWJG\",\"dialogactive\":\"Dialog_dialogactive__1hngQ\",\"messages\":\"Dialog_messages__210cV\",\"textarea\":\"Dialog_textarea__1Gbem\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__1TJCP\",\"item\":\"Navbar_item__mv9ja\",\"active_link\":\"Navbar_active_link__IvrTJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItems_item__1JtHj\",\"dialog\":\"DialogItems_dialog__2HxgT\",\"dialogactive\":\"DialogItems_dialogactive__1hvFA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPost_postsBlock__1tydI\",\"posts\":\"MyPost_posts__1-4eH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1CMKP\",\"message\":\"Message_message__3uYSz\",\"right\":\"Message_right__1qcCd\",\"left\":\"Message_left__3DCp_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1_T7u\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__2r3HU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1GsDp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ProfileInfo_block__39MIE\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {postsType, stateType} from \"../App\";\r\n\r\n\r\n\r\nlet rerenderEntireTree = (state:stateType) => {  // Выглядит как заглушка , на суппорт\r\n    console.log(state)\r\n}\r\n\r\nexport const state = {\r\n    profilePage: {\r\n        posts: [\r\n            {id: 1, message: \"General Kenobi!\", likescount: 7},\r\n            {id: 2, message: \"Hello There\", likescount: 10},\r\n            {id: 3, message: \"YOU WERE MY BROTHER ANAKIN\", likescount: 141},\r\n        ],\r\n        newPostText: \"\"\r\n    },\r\n    dialogsPage: {\r\n        dialogs: [\r\n            {id: 1, name: 'Lesha', avatar: \"https://shutnikov.club/wp-content/uploads/2020/01/1785179_thumb.png\"},\r\n            {id: 2, name: 'Sasha', avatar: \"https://shutnikov.club/wp-content/uploads/2020/01/1785179_thumb.png\"},\r\n            {id: 3, name: 'Pasha', avatar: \"https://shutnikov.club/wp-content/uploads/2020/01/1785179_thumb.png\"},\r\n            {id: 4, name: 'Masha', avatar: \"https://shutnikov.club/wp-content/uploads/2020/01/1785179_thumb.png\"},\r\n            {id: 5, name: 'Dasha', avatar: \"https://shutnikov.club/wp-content/uploads/2020/01/1785179_thumb.png\"},\r\n        ],\r\n        messages: [\r\n            {id: 1, message: 'Hello', myMessage: true},\r\n            {id: 2, message: 'How r u today?', myMessage: false},\r\n            {id: 3, message: 'Bad boys what you gonna do ?', myMessage: true},\r\n            {id: 4, message: 'When we come for you?', myMessage: false},\r\n        ],\r\n        newMessageText: ''\r\n\r\n    },\r\n    friends: [\r\n        {id: 1, name: \"Karina\"},\r\n        {id: 2, name: \"Kristina\"},\r\n        {id: 3, name: \"Albina\"}\r\n    ]\r\n\r\n}\r\n\r\nexport const addPost = () => {\r\n    let newPost: postsType = {id: 4, message: state.profilePage.newPostText, likescount: 0}\r\n    state.profilePage.posts.push(newPost)\r\n    rerenderEntireTree(state)\r\n}\r\n\r\nexport const updatePostMessage = (text: string) => {\r\n    state.profilePage.newPostText = text\r\n    rerenderEntireTree(state)\r\n}\r\n\r\nexport const addMessage = () => {\r\n    state.dialogsPage.messages.push({id: 5, message: state.dialogsPage.newMessageText, myMessage: Math.random() < 0.5})\r\n    rerenderEntireTree(state)\r\n}\r\n\r\n\r\nexport const updateMessageText = (text: string) => {\r\n    state.dialogsPage.newMessageText = text\r\n    rerenderEntireTree(state)\r\n}\r\n\r\nexport const subscribe = (observer: (state:stateType) => void) => {\r\n    rerenderEntireTree = observer\r\n}","import React from \"react\";\r\nimport s from \"./Header.module.css\"\r\n\r\nexport const Header = function () {\r\n    return (\r\n        <header className={s.header}>\r\n            <img src=\"http://logok.org/wp-content/uploads/2014/05/Total-logo-earth-880x660.png\" alt=\"seas\"/>\r\n        </header>\r\n    )\r\n}","import React from 'react';\r\nimport {FriendsType} from \"../../../App\";\r\nimport s from './Friends.module.css'\r\n\r\ntype propsType = {\r\n    friends : Array<FriendsType>\r\n}\r\n\r\nexport const Friends = (props: propsType) => {\r\n    return (\r\n        <div className={s.friends}>\r\n            <h2>Friends:</h2>\r\n            {props.friends.map(m => <span>{m.name} </span>)}\r\n            </div>\r\n    );\r\n};\r\n\r\n","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from \"./Navbar.module.css\"\r\nimport {Friends} from \"./Friends/Friends\";\r\nimport {FriendsType} from \"../../App\";\r\n\r\ntype propsType = {\r\n    friends: Array<FriendsType>\r\n}\r\n\r\nexport const Navbar = function (props: propsType) {\r\n\r\n    const isLinkActive = (x: { isActive: boolean }) => x.isActive ? s.active_link : s.item\r\n\r\n\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div>\r\n                <NavLink to={\"/profile/\"} className={isLinkActive}>Profile</NavLink>\r\n\r\n            </div>\r\n            <div>\r\n                <NavLink to={\"/dialogs/\"} className={isLinkActive}>Messages</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={'/news/'} className={isLinkActive}>News</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={'/music/'} className={isLinkActive}> Music</NavLink>\r\n            </div>\r\n            <div>\r\n                <NavLink to={'/settings/'} className={isLinkActive}>Settings</NavLink>\r\n            </div>\r\n            <div>\r\n                <Friends friends={props.friends}/>\r\n\r\n            </div>\r\n        </nav>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Post.module.css\"\r\n\r\ntype PropsType = {\r\n    message : string\r\n    likecount : number\r\n}\r\n\r\nexport const Post = function (props : PropsType) {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ0qh8eESLXwl36bofkdzT9g-kp5cUSoezKWaced8kqfun3E4KqFjv_sL4g9xlCagSUZWU&usqp=CAU\" />\r\n            {props.message}\r\n            <div>\r\n               <span>Likes : {props.likecount} </span>\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./MyPost.module.css\"\r\nimport {Post} from \"./Post/Post\";\r\nimport {postsType} from \"../../../App\";\r\n\r\n\r\n\r\ntype propsType = {\r\n    posts: Array<postsType>\r\n    addPost: () => void\r\n    newTextMsg: string\r\n    updatePostMessage: (text: string) => void\r\n}\r\n\r\nexport const MyPost = function (props: propsType) {\r\n\r\n\r\n    let postsElements = props.posts.map(m => <Post message={m.message} likecount={m.likescount}/>)\r\n\r\n    let newElement = React.createRef<HTMLTextAreaElement>() // SUPPORT WHY CREATEREF ?\r\n\r\n    const addPost = () => {\r\n        props.addPost()\r\n        props.updatePostMessage('')\r\n    }\r\n\r\n\r\n    const onChangeHandler = () => {\r\n        if (newElement.current) {\r\n            let text = newElement.current.value\r\n            props.updatePostMessage(text)\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n\r\n            <div>\r\n                My posts\r\n            </div>\r\n            <div>\r\n                <div>\r\n                    <textarea value={props.newTextMsg} ref={newElement} onChange={onChangeHandler}></textarea>\r\n                </div>\r\n                <div>\r\n                    <button onClick={addPost}>add post\r\n                    </button>\r\n                </div>\r\n            </div>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\n\r\ntype ProfileInfoPropsType = {}\r\nexport const ProfileInfo = (props: ProfileInfoPropsType) => {\r\n    return (\r\n        <div >\r\n            <div>\r\n                <img src=\"https://oceanservice.noaa.gov/facts/sea.jpg\" alt=\"seas\"/>\r\n            </div>\r\n            <div className={s.block}>\r\n                ava + desc\r\n            </div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\nimport s from \"./Profile.module.css\"\r\nimport {MyPost} from \"./MyPost/MyPost\";\r\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\r\nimport {postsType} from \"../../App\";\r\n\r\n\r\n\r\ntype propsType = {\r\n    posts : Array<postsType>\r\n    addPost: () => void\r\n    newTextMsg: string\r\n    updatePostMessage: (text: string) => void\r\n}\r\n\r\nexport const Profile = function (props: propsType) {\r\n    return (\r\n        <div className={s.content}>\r\n            <ProfileInfo/>\r\n            <MyPost posts={props.posts} addPost={props.addPost} newTextMsg={props.newTextMsg}\r\n                    updatePostMessage={props.updatePostMessage}\r\n            />\r\n        </div>\r\n    )\r\n}","import {NavLink} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport s from './DialogItems.module.css'\r\n\r\ntype DialogItemspropsType = {\r\n    name: string\r\n    id: number\r\n    avatar: string\r\n}\r\nexport const DialogItems = ({name, id, ...props}: DialogItemspropsType) => {\r\n\r\n    const classNameForNavLinkInDialogs = (x: { isActive: boolean }) => x.isActive ? s.dialogactive : s.dialog\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img src={props.avatar} alt='avatar' />\r\n            <NavLink className={classNameForNavLinkInDialogs} to={'/dialogs/' + id}>{name}</NavLink>\r\n        </div>\r\n    )\r\n}","import s from \"./Message.module.css\";\r\nimport React from \"react\";\r\n\r\ntype MessagePropsType = {\r\n    message: string\r\n    myMessage: boolean\r\n}\r\nexport const Message = (props: MessagePropsType) => {\r\n    return (\r\n        <div className={props.myMessage? s.left : s.right}>{props.message}</div>\r\n    )\r\n}","import React, {createRef} from 'react';\r\nimport s from './Dialog.module.css'\r\nimport {DialogItems} from \"./DialogItems/DialogItems\";\r\nimport {Message} from \"./Message/Message\";\r\nimport {dialogsType, messageType} from \"../../App\";\r\n\r\n\r\ntype propsType = {\r\n    messages: Array<messageType>\r\n    dialogs: Array<dialogsType>\r\n    addMessage: () => void\r\n    updateMessageText: (text: string) => void\r\n    newMessageText: string\r\n}\r\n\r\nexport const Dialogs = (props: propsType) => {\r\n\r\n\r\n    let messageElements = props.messages.map(m => <Message message={m.message} myMessage={m.myMessage}/>)\r\n    let dialogsElements = props.dialogs.map(m => <DialogItems name={m.name} id={m.id} avatar={m.avatar}/>)\r\n\r\n    let newMessage = createRef<HTMLTextAreaElement>()\r\n\r\n    const addMessage = () => {\r\n        props.addMessage()\r\n        props.updateMessageText('')\r\n\r\n    }\r\n\r\n    const onChangeHandler = () => {\r\n        if (newMessage.current) {\r\n            let text = newMessage.current.value\r\n            props.updateMessageText(text)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messageElements}\r\n                <div className={s.textarea}>\r\n                    <textarea value={props.newMessageText} ref={newMessage} onChange={onChangeHandler}> </textarea>\r\n                    <div>\r\n                        <button onClick={addMessage}>add message</button>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n","import React from 'react';\r\n\r\nconst Settings = () => {\r\n    return (\r\n        <div>\r\n            Settings\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Settings;","import React from \"react\";\r\n\r\nexport const Music = () => {\r\n    return (\r\n        <div>\r\n            Music\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const News = () => {\r\n    return (\r\n        <div>\r\n            News\r\n        </div>\r\n    );\r\n};\r\n\r\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {Dialogs} from \"./components/Dialogs/Dialogs\";\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport Settings from \"./components/Settings/Settings\";\nimport {Music} from \"./components/Music/Music\";\nimport {News} from \"./components/News/News\";\nimport {updateMessageText, updatePostMessage} from \"./redux/state\";\n\n\n\nexport type postsType = {\n    id: number\n    message: string\n    likescount: number\n}\n\nexport type dialogsType = {\n    id: number\n    name: string\n    avatar: string\n}\n\nexport type messageType = {\n    id: number\n    message: string\n    myMessage: boolean\n}\nexport type FriendsType = {\n    id: number\n    name: string\n}\n\nexport type stateType = {\n    profilePage: {\n        posts: Array<postsType>\n        newPostText: string\n    }\n    dialogsPage: {\n        dialogs: Array<dialogsType>\n        messages: Array<messageType>\n        newMessageText: string\n    }\n    friends: Array<FriendsType>\n}\ntype propsType = {\n    state: stateType\n    addPost: () => void\n    updatePostMessage: (text: string) => void\n    updateMessageText: (text: string) => void\n    addMessage: () => void\n\n}\n\nfunction App(props: propsType) {\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Navbar friends={props.state.friends}/>\n                <div className={'maincontent'}>\n                    <Routes>\n                        <Route path='/profile/*' element={<Profile\n                            posts={props.state.profilePage.posts}\n                            addPost={props.addPost}\n                            newTextMsg = {props.state.profilePage.newPostText}\n                            updatePostMessage={props.updatePostMessage}\n                        />}/>\n                        <Route path='/dialogs/*' element={<Dialogs\n                            messages={props.state.dialogsPage.messages}\n                            dialogs={props.state.dialogsPage.dialogs}\n                            addMessage={props.addMessage}\n                            updateMessageText={props.updateMessageText}\n                            newMessageText={props.state.dialogsPage.newMessageText}\n                        />}/>\n                        <Route path='/news/*' element={<News/>}/>\n                        <Route path='/music/*' element={<Music/>}/>\n                        <Route path='/settings/*' element={<Settings/>}/>\n                    </Routes>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport reportWebVitals from './reportWebVitals';\nimport {addMessage, addPost, state, subscribe, updateMessageText, updatePostMessage} from \"./redux/state\";\nimport App, {stateType} from \"./App\";\nimport ReactDOM from \"react-dom\";\n\n\n\nexport const rerenderEntireTree = (state: stateType) => {\n    ReactDOM.render(\n        <App\n            state={state}\n            addPost={addPost}\n            updatePostMessage={updatePostMessage}\n            addMessage={addMessage}\n            updateMessageText={updateMessageText}\n        />\n        ,\n        document.getElementById('root')\n    );\n\n}\n\nrerenderEntireTree(state)\n\nsubscribe(rerenderEntireTree)\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}