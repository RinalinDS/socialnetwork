{"version":3,"sources":["components/Dialogs/Dialog.module.css","components/Navbar/Navbar.module.css","components/Dialogs/DialogItems/DialogItems.module.css","components/Profile/MyPost/MyPost.module.css","components/Dialogs/Message/Message.module.css","components/Header/Header.module.css","components/Navbar/Friends/Friends.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPost/Post/Post.module.css","reportWebVitals.ts","redux/profileReducer.ts","redux/dialogsReducer.ts","redux/sidebarReducer.ts","redux/redux-store.ts","components/Header/Header.tsx","components/Navbar/Friends/Friends.tsx","components/Navbar/Navbar.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPost/Post/Post.tsx","components/Profile/MyPost/MyPost.tsx","components/Profile/MyPost/MyPostContainer.tsx","components/Profile/Profile.tsx","components/Settings/Settings.tsx","components/Music/Music.tsx","components/News/News.tsx","components/Dialogs/DialogItems/DialogItems.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","posts","id","message","likescount","newPostText","ADD_POST","UPDATE_POST_MESSAGE","ADD_LIKE_COUNT","dialogs","name","avatar","messages","myMessage","newMessageText","reducers","combineReducers","profilePage","state","action","type","newPost","push","text","map","m","dialogsPage","newMessage","Math","random","friends","store","createStore","window","Header","className","s","header","src","alt","Friends","props","Navbar","isLinkActive","x","isActive","active_link","item","nav","to","ProfileInfo","block","Post","onClick","likeClickHandler","likecount","MyPost","postsElements","addPost","postsBlock","value","newTextMsg","onKeyPress","e","code","preventDefault","onChange","currentTarget","updatePostMsg","MyPostContainer","useSelector","dispatch","useDispatch","addLikeCountAC","updatePostMessageAC","Profile","content","Settings","Music","News","DialogItems","dialogactive","dialog","Message","left","right","DialogsContainer","connect","addMessage","updateMessageText","updateMessageTextAC","messageElements","dialogsElements","dialogsItems","textarea","App","friendsState","path","element","rerenderEntireTree","ReactDOM","render","document","getElementById","subscribe"],"mappings":"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","file":"static/js/main.0ed1cc25.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialog_dialogs__1eJy-\",\"dialogsItems\":\"Dialog_dialogsItems__2GDaC\",\"dialog\":\"Dialog_dialog__3lD9k\",\"dialogactive\":\"Dialog_dialogactive__2ZNd-\",\"messages\":\"Dialog_messages__EJJxc\",\"textarea\":\"Dialog_textarea__31_Tg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__OfWCE\",\"item\":\"Navbar_item__3giWq\",\"active_link\":\"Navbar_active_link__vbaJX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItems_item__tRr1z\",\"dialog\":\"DialogItems_dialog__2xPOY\",\"dialogactive\":\"DialogItems_dialogactive__3-P4d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPost_postsBlock__2zzyg\",\"posts\":\"MyPost_posts__3-OYg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"messages\":\"Message_messages__1KBqZ\",\"message\":\"Message_message__YWZN1\",\"right\":\"Message_right__2L3w2\",\"left\":\"Message_left__2NGck\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__3cqcB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friends\":\"Friends_friends__1zAOS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"block\":\"ProfileInfo_block__Rxxo8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__2zcpj\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {postsType} from \"../App\";\nimport {GeneralType} from \"./store\";\n\nexport type profileReducerStateType = {\n    posts: Array<postsType>\n    newPostText: string\n}\n\nexport type addPostType = {\n    type: \"ADD-POST\"\n}\nexport type updatePostMessageType = {\n    type: \"UPDATE-POST-MESSAGE\"\n    text: string\n}\nexport type addMessageMType = {\n    type: \"ADD-MESSAGE\"\n}\n\nconst initialState: profileReducerStateType = {\n    posts: [\n        {id: 1, message: \"General Kenobi!\", likescount: 7},\n        {id: 2, message: \"Hello There\", likescount: 10},\n        {id: 3, message: \"YOU WERE MY BROTHER ANAKIN\", likescount: 141},\n    ],\n    newPostText: \"\"\n}\n\nexport const profileReducer = (state: profileReducerStateType = initialState, action: GeneralType): profileReducerStateType => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost: postsType = {id: 4, message: state.newPostText, likescount: 0}\n            state.posts.push(newPost)\n            state.newPostText = ''\n            return state\n        case UPDATE_POST_MESSAGE:\n            state.newPostText = action.text\n            return state\n        case ADD_LIKE_COUNT:\n            return {...state,\n                posts: state.posts.map((m: postsType) => m.id === action.id ? {\n                    ...m,\n                    likescount: action.likescount + 1\n                } : m)\n            }\n        default:\n            return state\n    }\n}\n\n\nconst ADD_POST = \"ADD-POST\"\nconst UPDATE_POST_MESSAGE = \"UPDATE-POST-MESSAGE\"\nconst ADD_LIKE_COUNT = \"ADD-LIKE-COUNT\"\n\n\nexport const addPostAC = (): GeneralType => {\n    return {\n        type: ADD_POST,\n    }\n}\nexport const updatePostMessageAC = (text: string): GeneralType => {\n    return {\n        type: UPDATE_POST_MESSAGE,\n        text\n    }\n}\nexport const addLikeCountAC = (id: number, likescount: number): GeneralType => {\n    return {\n        type: ADD_LIKE_COUNT,\n        id,\n        likescount\n    }\n}\n","import {dialogsType, messageType} from \"../App\";\nimport {GeneralType} from \"./store\";\n\nexport type dialogsReducerStateType = {\n        dialogs: Array<dialogsType>\n        messages: Array<messageType>\n        newMessageText: string\n}\n\nexport type updateMessageTextType = {\n    type: \"UPDATE-MESSAGE-TEXT\"\n    text: string\n}\nexport type addLikeCountType = {\n    type: \"ADD-LIKE-COUNT\"\n    id: number\n    likescount: number\n}\n\nconst initialState:dialogsReducerStateType = {\n    dialogs: [\n        {id: 1, name: 'Lesha', avatar: \"https://shutnikov.club/wp-content/uploads/2020/01/1785179_thumb.png\"},\n        {id: 2, name: 'Sasha', avatar: \"https://shutnikov.club/wp-content/uploads/2020/01/1785179_thumb.png\"},\n        {id: 3, name: 'Pasha', avatar: \"https://shutnikov.club/wp-content/uploads/2020/01/1785179_thumb.png\"},\n        {id: 4, name: 'Masha', avatar: \"https://shutnikov.club/wp-content/uploads/2020/01/1785179_thumb.png\"},\n        {id: 5, name: 'Dasha', avatar: \"https://shutnikov.club/wp-content/uploads/2020/01/1785179_thumb.png\"},\n    ],\n    messages: [\n        {id: 1, message: 'Hello', myMessage: true},\n        {id: 2, message: 'How r u today?', myMessage: false},\n        {id: 3, message: 'Bad boys what you gonna do ?', myMessage: true},\n        {id: 4, message: 'When we come for you?', myMessage: false},\n    ],\n    newMessageText: ''\n}\n\nexport const dialogsReducer = (state: dialogsReducerStateType =initialState , action: GeneralType):dialogsReducerStateType => {\n    switch (action.type) {\n        case \"ADD-MESSAGE\":\n            const newMessage = {id: 5, message: state.newMessageText,myMessage: Math.random() < 0.5}\n            state.newMessageText = ''\n            return {...state, messages: [...state.messages, newMessage]}\n        case \"UPDATE-MESSAGE-TEXT\":\n            return {...state, newMessageText: action.text}\n        default:\n            return state\n    }\n}\n\n\nconst ADD_MESSAGE = \"ADD-MESSAGE\"\nconst UPDATE_MESSAGE_TEXT = \"UPDATE-MESSAGE-TEXT\"\n\nexport const addMessageAC = (): GeneralType => {\n    return {\n        type: ADD_MESSAGE,\n    }\n}\nexport const updateMessageTextAC = (text: string): GeneralType => {\n    return {\n        type: UPDATE_MESSAGE_TEXT,\n        text\n    }\n}","import {FriendsType} from \"../App\";\nimport {GeneralType} from \"./store\";\n\ntype sidebarReducerStateType = Array<FriendsType>\n\nconst initialState: Array<FriendsType> = [\n    {id: 1, name: \"Karina\"},\n    {id: 2, name: \"Kristina\"},\n    {id: 3, name: \"Albina\"}\n]\n\n\n\n\nexport const sidebarReducer = (state: sidebarReducerStateType = initialState, action: GeneralType): sidebarReducerStateType => {\n    switch (action.type) {\n        default:\n            return state\n\n    }\n\n\n}","import {combineReducers, createStore} from \"redux\";\nimport {profileReducer} from \"./profileReducer\";\nimport {dialogsReducer} from \"./dialogsReducer\";\nimport {sidebarReducer} from \"./sidebarReducer\";\n\n\nconst reducers = combineReducers({\n    profilePage: profileReducer,\n    dialogsPage: dialogsReducer,\n    friends: sidebarReducer,\n})\n\nexport type AppRootStateType = ReturnType<typeof reducers>\n\nexport const store = createStore(reducers)\n\n//@ts-ignore\nwindow.store= store","import React from \"react\";\nimport s from \"./Header.module.css\"\n\nexport const Header = function () {\n    return (\n        <header className={s.header}>\n            <img src=\"http://logok.org/wp-content/uploads/2014/05/Total-logo-earth-880x660.png\" alt=\"seas\"/>\n        </header>\n    )\n}","import React from 'react';\nimport {FriendsType} from \"../../../App\";\nimport s from './Friends.module.css'\n\ntype propsType = {\n    friends : Array<FriendsType>\n}\n\nexport const Friends = (props: propsType) => {\n    return (\n        <div className={s.friends}>\n            <h2>Friends:</h2>\n            {props.friends.map(m => <span>{m.name} </span>)}\n            </div>\n    );\n};\n\n","import React from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport s from \"./Navbar.module.css\"\nimport {Friends} from \"./Friends/Friends\";\nimport {FriendsType} from \"../../App\";\n\ntype propsType = {\n    friends: Array<FriendsType>\n}\n\nexport const Navbar = function (props: propsType) {\n\n    const isLinkActive = (x: { isActive: boolean }) => x.isActive ? s.active_link : s.item\n\n\n    return (\n        <nav className={s.nav}>\n            <div>\n                <NavLink to={\"/profile/\"} className={isLinkActive}>Profile</NavLink>\n\n            </div>\n            <div>\n                <NavLink to={\"/dialogs/\"} className={isLinkActive}>Messages</NavLink>\n            </div>\n            <div>\n                <NavLink to={'/news/'} className={isLinkActive}>News</NavLink>\n            </div>\n            <div>\n                <NavLink to={'/music/'} className={isLinkActive}> Music</NavLink>\n            </div>\n            <div>\n                <NavLink to={'/settings/'} className={isLinkActive}>Settings</NavLink>\n            </div>\n            <div>\n                <Friends friends={props.friends}/>\n\n            </div>\n        </nav>\n    )\n}","import React from \"react\";\nimport s from './ProfileInfo.module.css'\n\ntype ProfileInfoPropsType = {}\nexport const ProfileInfo = (props: ProfileInfoPropsType) => {\n    return (\n        <div >\n            <div>\n                <img src=\"https://oceanservice.noaa.gov/facts/sea.jpg\" alt=\"seas\"/>\n            </div>\n            <div className={s.block}>\n                ava + desc\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport s from \"./Post.module.css\"\n\n\ntype PropsType = {\n    message : string\n    likecount : number\n    likeClickHandler: (id: number, likescount: number) => void\n    id: number\n}\n\nexport const Post = function (props : PropsType) {\n    const onClickAddLikeHandler = () => {\n        props.likeClickHandler(props.id, props.likecount)\n    }\n\n\n    return (\n        <div className={s.item}>\n            <img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ0qh8eESLXwl36bofkdzT9g-kp5cUSoezKWaced8kqfun3E4KqFjv_sL4g9xlCagSUZWU&usqp=CAU\" alt={' of seas'}/>\n            {props.message}\n            <div>\n               <span onClick={onClickAddLikeHandler}>Likes : {props.likecount} </span>\n            </div>\n        </div>\n    )\n}","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport s from \"./MyPost.module.css\"\nimport {Post} from \"./Post/Post\";\nimport {postsType} from \"../../../App\";\n\n\ntype propsType = {\n    posts: Array<postsType>\n    newTextMsg: string\n    addPost: () => void\n    updatePostMsg: (text: string) => void\n    likeClickHandler: (id: number, likescount: number) => void\n\n\n}\n\nexport const MyPost = function (props: propsType) {\n\n    let postsElements = props.posts.map(m => <Post likeClickHandler={props.likeClickHandler} id={m.id}\n                                                   message={m.message} likecount={m.likescount}/>)\n\n    const addPost = () => {\n        props.addPost()\n    }\n\n\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        if (e.currentTarget) {\n            let text = e.currentTarget.value\n            props.updatePostMsg(text)\n        }\n    }\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        if (e.code === \"Enter\") {\n            e.preventDefault() // чтобы не переходило на следующую строку и не бесило меня возвращать обратно\n            addPost()\n        }\n\n    }\n\n\n    return (\n        <div className={s.postsBlock}>\n            <div>\n                My posts\n            </div>\n            <div>\n                <div>\n                    <textarea value={props.newTextMsg} onKeyPress={onKeyPressHandler} onChange={onChangeHandler}/>\n                </div>\n                <div>\n                    <button onClick={addPost}>add post\n                    </button>\n                </div>\n            </div>\n            <div className={s.posts}>\n                {postsElements}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\nimport {\n    addLikeCountAC,\n    addPostAC,\n    profileReducerStateType,\n    updatePostMessageAC\n} from \"../../../redux/profileReducer\";\nimport {MyPost} from \"./MyPost\";\nimport {AppRootStateType} from \"../../../redux/redux-store\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\n\nexport const MyPostContainer = function () {\n\n    const state = useSelector<AppRootStateType, profileReducerStateType>(state => state.profilePage)\n    const dispatch = useDispatch()\n\n\n    const addPost = () => {\n        dispatch(addPostAC())\n    }\n\n\n    const onChangeHandler = (text: string) => {\n        /* let action: GeneralType = { type: \"UPDATE-POST-MESSAGE\", text }*/\n        dispatch(updatePostMessageAC(text))\n    }\n\n    const onClickAddLikeHandler = (id: number, likescount: number) => {\n        dispatch(addLikeCountAC(id, likescount))\n    }\n\n    return (\n        <MyPost posts={state.posts} newTextMsg={state.newPostText} likeClickHandler={onClickAddLikeHandler}\n                addPost={addPost} updatePostMsg={onChangeHandler}/>\n    )\n}","import React from \"react\";\nimport s from \"./Profile.module.css\"\nimport {ProfileInfo} from \"./ProfileInfo/ProfileInfo\";\nimport {MyPostContainer} from \"./MyPost/MyPostContainer\";\n\n\nexport const Profile = function () {\n    return (\n        <div className={s.content}>\n            <ProfileInfo/>\n            <MyPostContainer/>\n        </div>\n    )\n}","import React from 'react';\n\nconst Settings = () => {\n    return (\n        <div>\n            Settings\n        </div>\n    );\n};\n\nexport default Settings;","import React from \"react\";\n\nexport const Music = () => {\n    return (\n        <div>\n            Music\n        </div>\n    )\n}","import React from 'react';\n\nexport const News = () => {\n    return (\n        <div>\n            News\n        </div>\n    );\n};\n\n","import {NavLink} from \"react-router-dom\";\nimport React from \"react\";\nimport s from './DialogItems.module.css'\n\ntype DialogItemspropsType = {\n    name: string\n    id: number\n    avatar: string\n}\nexport const DialogItems = ({name, id, ...props}: DialogItemspropsType) => {\n\n    const classNameForNavLinkInDialogs = (x: { isActive: boolean }) => x.isActive ? s.dialogactive : s.dialog\n\n    return (\n        <div className={s.item}>\n            <img src={props.avatar} alt='avatar' />\n            <NavLink className={classNameForNavLinkInDialogs} to={'/dialogs/' + id}>{name}</NavLink>\n        </div>\n    )\n}","import s from \"./Message.module.css\";\nimport React from \"react\";\n\ntype MessagePropsType = {\n    message: string\n    myMessage: boolean\n}\nexport const Message = (props: MessagePropsType) => {\n    return (\n        <div className={props.myMessage? s.left : s.right}>{props.message}</div>\n    )\n}","import {GeneralType} from \"../../redux/store\";\nimport {addMessageAC, updateMessageTextAC} from \"../../redux/dialogsReducer\";\nimport {connect} from \"react-redux\";\nimport {AppRootStateType} from \"../../redux/redux-store\";\nimport {Dialogs} from \"./Dialogs\";\n\n\nconst mapStateToProps = (state: AppRootStateType) => {\n    return {\n        dialogs: state.dialogsPage.dialogs,\n        messages: state.dialogsPage.messages,\n        newMessageText: state.dialogsPage.newMessageText,\n    }\n}\n\nconst mapDispatchToProps = (dispatch:(action: GeneralType)=> void) => {\n    return {\n        addMessage: () => {\n            dispatch(addMessageAC())\n        },\n        updateMessageText: (text: string) => {\n            dispatch(updateMessageTextAC(text))\n        }\n    }\n}\n\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)\n","import React, {ChangeEvent, KeyboardEvent} from 'react';\nimport s from './Dialog.module.css'\nimport {DialogItems} from \"./DialogItems/DialogItems\";\nimport {Message} from \"./Message/Message\";\nimport {dialogsType, messageType} from \"../../App\";\n\n\ntype propsType = {\n    dialogs: Array<dialogsType>\n    messages: Array<messageType>\n    newMessageText: string\n    addMessage: () => void\n    updateMessageText: (text: string) => void\n}\n\nexport const Dialogs = (props: propsType) => {\n\n    let messageElements = props.messages.map(m => <Message message={m.message} myMessage={m.myMessage}/>)\n    let dialogsElements = props.dialogs.map(m => <DialogItems name={m.name} id={m.id} avatar={m.avatar}/>)\n\n    const addMessage = () => {\n        props.addMessage()\n    }\n\n    const onChangeHandler = (e: ChangeEvent<HTMLTextAreaElement>) => {\n        if (e.currentTarget) {\n            let text = e.currentTarget.value\n            props.updateMessageText(text)\n        }\n    }\n    const onKeyPressHandler = (e: KeyboardEvent<HTMLTextAreaElement>) => {\n        if (e.code === \"Enter\") {\n            e.preventDefault()\n            addMessage()\n        }\n    }\n\n    return (\n        <div className={s.dialogs}>\n            <div className={s.dialogsItems}>\n\n                {dialogsElements}\n\n            </div>\n            <div className={s.messages}>\n\n                {messageElements}\n\n                <div className={s.textarea}>\n                    <textarea value={props.newMessageText} onKeyPress={onKeyPressHandler}\n                              onChange={onChangeHandler}> </textarea>\n                    <div>\n                        <button onClick={addMessage}>add message</button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n","import React from 'react';\nimport './App.css';\nimport {Header} from \"./components/Header/Header\";\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {Profile} from \"./components/Profile/Profile\";\nimport {BrowserRouter, Route, Routes} from \"react-router-dom\";\nimport Settings from \"./components/Settings/Settings\";\nimport {Music} from \"./components/Music/Music\";\nimport {News} from \"./components/News/News\";\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport {useSelector} from \"react-redux\";\nimport {AppRootStateType} from \"./redux/redux-store\";\n\n\n\n\nexport type postsType = {\n    id: number\n    message: string\n    likescount: number\n}\nexport type dialogsType = {\n    id: number\n    name: string\n    avatar: string\n}\nexport type messageType = {\n    id: number\n    message: string\n    myMessage: boolean\n}\nexport type FriendsType = {\n    id: number\n    name: string\n}\n\nexport type stateType = {\n    profilePage: {\n        posts: Array<postsType>\n        newPostText: string\n    }\n    dialogsPage: {\n        dialogs: Array<dialogsType>\n        messages: Array<messageType>\n        newMessageText: string\n    }\n    friends: Array<FriendsType>\n}\n\n\nfunction App() {\n    const friendsState = useSelector<AppRootStateType, Array<FriendsType>>(state => state.friends)\n\n    return (\n        <BrowserRouter>\n            <div className=\"app-wrapper\">\n                <Header/>\n                <Navbar friends={friendsState}/>\n                <div className={'maincontent'}>\n                    <Routes>\n                        <Route path='/profile/*' element={<Profile />}/>\n                        <Route path='/dialogs/*' element={<DialogsContainer />}/>\n                        <Route path='/news/*' element={<News/>}/>\n                        <Route path='/music/*' element={<Music/>}/>\n                        <Route path='/settings/*' element={<Settings/>}/>\n                    </Routes>\n                </div>\n            </div>\n        </BrowserRouter>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport reportWebVitals from './reportWebVitals';\nimport {store} from \"./redux/redux-store\";\nimport App from \"./App\";\nimport ReactDOM from \"react-dom\";\nimport {Provider} from \"react-redux\";\n\n\nexport const rerenderEntireTree = () => {\n    ReactDOM.render(\n        <Provider store={store}>\n            <App/>\n        </Provider>\n        ,\n        document.getElementById('root')\n    );\n\n}\n\nrerenderEntireTree()\n\nstore.subscribe(()=> {\n    rerenderEntireTree()\n})\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}